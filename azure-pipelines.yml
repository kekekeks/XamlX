jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 2.1.818'
        inputs:
          version: 2.1.818

      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 6.0.100'
        inputs:
          version: 6.0.100

      - task: CmdLine@2
        displayName: 'Run Tests'
        inputs:
          script: |
            mono --version
            dotnet --info
            dotnet build
            dotnet test -f netcoreapp2.1 --logger "trx" --results-directory artifacts/test-results
            dotnet test -f net47 --logger "trx" --results-directory artifacts/test-results
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '$(Build.SourcesDirectory)/artifacts/test-results/*.trx'
        condition: not(canceled())


  - job: Windows
    pool:
      vmImage: 'windows-2022'
    variables:
      SolutionDir: '$(Build.SourcesDirectory)'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 2.1.818'
        inputs:
          version: 2.1.818

      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 6.0.100'
        inputs:
          version: 6.0.100

      - task: CmdLine@2
        displayName: 'Run Tests'
        inputs:
          script: |
            dotnet --info
            dotnet build
            dotnet test -f netcoreapp2.1 --logger "trx" --results-directory artifacts/test-results
            dotnet test -f net47 --logger "trx" --results-directory artifacts/test-results

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '$(Build.SourcesDirectory)/artifacts/test-results/*.trx'
        condition: not(canceled())